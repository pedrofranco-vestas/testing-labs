name: workflow-without-master

on:
  push:
    branches-ignore: 
      - 'main'
  pull_request:
    branches-ignore: 
      - 'main'
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    
    - name: Restore dependencies
      run: dotnet restore

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: '5.x'

    - name: Determine version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.9
      with: 
        useConfigFile: true

    - name: Show determined version
      run: |
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
        echo "SemVer: ${{ steps.gitversion.outputs.SemVer }}"
    
    - name: Build
      run: dotnet build --no-restore -c Release /p:PackageVersion=${{ steps.gitversion.outputs.SemVer }}
    
    - name: Test
      run: dotnet test --no-build -c Release --verbosity normal

    - name: Tag & push commit
      run: |
        git tag ${{ steps.gitversion.outputs.SemVer }}
        git push origin --tags

    - name: Package Model
      run: dotnet pack ./HelloWorld --no-build --no-restore -c Release -o . /p:PackageVersion=${{ steps.gitversion.outputs.SemVer }}

    # - name: Add nuget source
    #   run: dotnet nuget add source --username vestas-power-solutions --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/vestas-power-solutions/index.json"

    # - name: Publish Package
    #   run: dotnet nuget push "./*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"

    - name: Build artifacts
      run: dotnet publish ./HelloWorld -c Release --self-contained --nologo -p:PublishTrimmed=true --output publish/ -r win-x64

    - name: Pack artifacts
      uses: papeloto/action-zip@v1
      with:
        dest: hello-world-win-x64-v${{ steps.gitversion.outputs.SemVer }}.zip
        files: publish/
    
    - name: Store artifacts
      uses: actions/upload-artifact@v2
      with:
        name: hello-world-v${{ steps.gitversion.outputs.SemVer }}
        path: ./*.zip

    # - name: Publish release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: hello-world-win-x64.zip
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: '5.x'

    - name: Determine version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.9
      with: 
        useConfigFile: true

    - name: Show determined version
      run: |
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
        echo "SemVer: ${{ steps.gitversion.outputs.SemVer }}"
    
    # - name: Retrieve artifacts
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: hello-world-v${{ steps.gitversion.outputs.SemVer }}
    #     path: ./*.zip

    # - name: Publish release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: hello-world-win-x64.zip
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
